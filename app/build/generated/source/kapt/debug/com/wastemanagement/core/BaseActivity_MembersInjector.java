// Generated by Dagger (https://dagger.dev).
package com.wastemanagement.core;

import com.wastemanagement.network.NetworkHelper;
import com.wastemanagement.preferences.Preferences;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector implements MembersInjector<BaseActivity> {
  private final Provider<Preferences> preferencesProvider;

  private final Provider<NetworkHelper> networkHelperProvider;

  public BaseActivity_MembersInjector(Provider<Preferences> preferencesProvider,
      Provider<NetworkHelper> networkHelperProvider) {
    this.preferencesProvider = preferencesProvider;
    this.networkHelperProvider = networkHelperProvider;
  }

  public static MembersInjector<BaseActivity> create(Provider<Preferences> preferencesProvider,
      Provider<NetworkHelper> networkHelperProvider) {
    return new BaseActivity_MembersInjector(preferencesProvider, networkHelperProvider);
  }

  @Override
  public void injectMembers(BaseActivity instance) {
    injectPreferences(instance, preferencesProvider.get());
    injectNetworkHelper(instance, networkHelperProvider.get());
  }

  @InjectedFieldSignature("com.wastemanagement.core.BaseActivity.preferences")
  public static void injectPreferences(BaseActivity instance, Preferences preferences) {
    instance.preferences = preferences;
  }

  @InjectedFieldSignature("com.wastemanagement.core.BaseActivity.networkHelper")
  public static void injectNetworkHelper(BaseActivity instance, NetworkHelper networkHelper) {
    instance.networkHelper = networkHelper;
  }
}
