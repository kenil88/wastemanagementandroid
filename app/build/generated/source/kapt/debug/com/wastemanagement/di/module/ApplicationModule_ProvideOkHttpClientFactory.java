// Generated by Dagger (https://dagger.dev).
package com.wastemanagement.di.module;

import android.content.Context;
import com.wastemanagement.preferences.Preferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideOkHttpClientFactory implements Factory<OkHttpClient> {
  private final ApplicationModule module;

  private final Provider<Context> appContextProvider;

  private final Provider<Preferences> userPreferencesProvider;

  public ApplicationModule_ProvideOkHttpClientFactory(ApplicationModule module,
      Provider<Context> appContextProvider, Provider<Preferences> userPreferencesProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
    this.userPreferencesProvider = userPreferencesProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideOkHttpClient(module, appContextProvider.get(), userPreferencesProvider.get());
  }

  public static ApplicationModule_ProvideOkHttpClientFactory create(ApplicationModule module,
      Provider<Context> appContextProvider, Provider<Preferences> userPreferencesProvider) {
    return new ApplicationModule_ProvideOkHttpClientFactory(module, appContextProvider, userPreferencesProvider);
  }

  public static OkHttpClient provideOkHttpClient(ApplicationModule instance, Context appContext,
      Preferences userPreferences) {
    return Preconditions.checkNotNullFromProvides(instance.provideOkHttpClient(appContext, userPreferences));
  }
}
