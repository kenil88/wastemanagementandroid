// Generated by view binder compiler. Do not edit!
package com.wastemanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.wastemanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRequestListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout layoutAcceptOrReject;

  @NonNull
  public final FrameLayout layoutAttachments;

  @NonNull
  public final TextView pageCount;

  @NonNull
  public final AppCompatButton txtAccept;

  @NonNull
  public final TextView txtDonationDescription;

  @NonNull
  public final TextView txtDonorAddress;

  @NonNull
  public final TextView txtDonorContact;

  @NonNull
  public final TextView txtDonorEmail;

  @NonNull
  public final TextView txtDonorName;

  @NonNull
  public final AppCompatButton txtReject;

  @NonNull
  public final TextView txtRequestStatus;

  @NonNull
  public final ViewPager viewpagerAttachments;

  private ItemRequestListBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout layoutAcceptOrReject, @NonNull FrameLayout layoutAttachments,
      @NonNull TextView pageCount, @NonNull AppCompatButton txtAccept,
      @NonNull TextView txtDonationDescription, @NonNull TextView txtDonorAddress,
      @NonNull TextView txtDonorContact, @NonNull TextView txtDonorEmail,
      @NonNull TextView txtDonorName, @NonNull AppCompatButton txtReject,
      @NonNull TextView txtRequestStatus, @NonNull ViewPager viewpagerAttachments) {
    this.rootView = rootView;
    this.layoutAcceptOrReject = layoutAcceptOrReject;
    this.layoutAttachments = layoutAttachments;
    this.pageCount = pageCount;
    this.txtAccept = txtAccept;
    this.txtDonationDescription = txtDonationDescription;
    this.txtDonorAddress = txtDonorAddress;
    this.txtDonorContact = txtDonorContact;
    this.txtDonorEmail = txtDonorEmail;
    this.txtDonorName = txtDonorName;
    this.txtReject = txtReject;
    this.txtRequestStatus = txtRequestStatus;
    this.viewpagerAttachments = viewpagerAttachments;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRequestListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRequestListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_request_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRequestListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layoutAcceptOrReject;
      LinearLayout layoutAcceptOrReject = ViewBindings.findChildViewById(rootView, id);
      if (layoutAcceptOrReject == null) {
        break missingId;
      }

      id = R.id.layoutAttachments;
      FrameLayout layoutAttachments = ViewBindings.findChildViewById(rootView, id);
      if (layoutAttachments == null) {
        break missingId;
      }

      id = R.id.pageCount;
      TextView pageCount = ViewBindings.findChildViewById(rootView, id);
      if (pageCount == null) {
        break missingId;
      }

      id = R.id.txtAccept;
      AppCompatButton txtAccept = ViewBindings.findChildViewById(rootView, id);
      if (txtAccept == null) {
        break missingId;
      }

      id = R.id.txtDonationDescription;
      TextView txtDonationDescription = ViewBindings.findChildViewById(rootView, id);
      if (txtDonationDescription == null) {
        break missingId;
      }

      id = R.id.txtDonorAddress;
      TextView txtDonorAddress = ViewBindings.findChildViewById(rootView, id);
      if (txtDonorAddress == null) {
        break missingId;
      }

      id = R.id.txtDonorContact;
      TextView txtDonorContact = ViewBindings.findChildViewById(rootView, id);
      if (txtDonorContact == null) {
        break missingId;
      }

      id = R.id.txtDonorEmail;
      TextView txtDonorEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtDonorEmail == null) {
        break missingId;
      }

      id = R.id.txtDonorName;
      TextView txtDonorName = ViewBindings.findChildViewById(rootView, id);
      if (txtDonorName == null) {
        break missingId;
      }

      id = R.id.txtReject;
      AppCompatButton txtReject = ViewBindings.findChildViewById(rootView, id);
      if (txtReject == null) {
        break missingId;
      }

      id = R.id.txtRequestStatus;
      TextView txtRequestStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtRequestStatus == null) {
        break missingId;
      }

      id = R.id.viewpagerAttachments;
      ViewPager viewpagerAttachments = ViewBindings.findChildViewById(rootView, id);
      if (viewpagerAttachments == null) {
        break missingId;
      }

      return new ItemRequestListBinding((RelativeLayout) rootView, layoutAcceptOrReject,
          layoutAttachments, pageCount, txtAccept, txtDonationDescription, txtDonorAddress,
          txtDonorContact, txtDonorEmail, txtDonorName, txtReject, txtRequestStatus,
          viewpagerAttachments);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
