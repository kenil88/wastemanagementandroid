// Generated by view binder compiler. Do not edit!
package com.wastemanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.wastemanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDonationRequestBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatButton btnSendRequest;

  @NonNull
  public final AppCompatButton btnUploadImages;

  @NonNull
  public final AppCompatEditText edAcceptorName;

  @NonNull
  public final AppCompatEditText edDonationDescription;

  @NonNull
  public final AppCompatEditText edDonorContact;

  @NonNull
  public final AppCompatEditText edDonorEmail;

  @NonNull
  public final AppCompatEditText edDonorName;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final RelativeLayout layoutHeader;

  @NonNull
  public final RecyclerView recyclerDonationAttachments;

  @NonNull
  public final TextView txtDonorLocation;

  @NonNull
  public final TextView txtHeaderText;

  private ActivityDonationRequestBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatButton btnSendRequest, @NonNull AppCompatButton btnUploadImages,
      @NonNull AppCompatEditText edAcceptorName, @NonNull AppCompatEditText edDonationDescription,
      @NonNull AppCompatEditText edDonorContact, @NonNull AppCompatEditText edDonorEmail,
      @NonNull AppCompatEditText edDonorName, @NonNull ImageView imgBack,
      @NonNull RelativeLayout layoutHeader, @NonNull RecyclerView recyclerDonationAttachments,
      @NonNull TextView txtDonorLocation, @NonNull TextView txtHeaderText) {
    this.rootView = rootView;
    this.btnSendRequest = btnSendRequest;
    this.btnUploadImages = btnUploadImages;
    this.edAcceptorName = edAcceptorName;
    this.edDonationDescription = edDonationDescription;
    this.edDonorContact = edDonorContact;
    this.edDonorEmail = edDonorEmail;
    this.edDonorName = edDonorName;
    this.imgBack = imgBack;
    this.layoutHeader = layoutHeader;
    this.recyclerDonationAttachments = recyclerDonationAttachments;
    this.txtDonorLocation = txtDonorLocation;
    this.txtHeaderText = txtHeaderText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDonationRequestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDonationRequestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_donation_request, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDonationRequestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSendRequest;
      AppCompatButton btnSendRequest = ViewBindings.findChildViewById(rootView, id);
      if (btnSendRequest == null) {
        break missingId;
      }

      id = R.id.btnUploadImages;
      AppCompatButton btnUploadImages = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadImages == null) {
        break missingId;
      }

      id = R.id.edAcceptorName;
      AppCompatEditText edAcceptorName = ViewBindings.findChildViewById(rootView, id);
      if (edAcceptorName == null) {
        break missingId;
      }

      id = R.id.edDonationDescription;
      AppCompatEditText edDonationDescription = ViewBindings.findChildViewById(rootView, id);
      if (edDonationDescription == null) {
        break missingId;
      }

      id = R.id.edDonorContact;
      AppCompatEditText edDonorContact = ViewBindings.findChildViewById(rootView, id);
      if (edDonorContact == null) {
        break missingId;
      }

      id = R.id.edDonorEmail;
      AppCompatEditText edDonorEmail = ViewBindings.findChildViewById(rootView, id);
      if (edDonorEmail == null) {
        break missingId;
      }

      id = R.id.edDonorName;
      AppCompatEditText edDonorName = ViewBindings.findChildViewById(rootView, id);
      if (edDonorName == null) {
        break missingId;
      }

      id = R.id.imgBack;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.layoutHeader;
      RelativeLayout layoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.recyclerDonationAttachments;
      RecyclerView recyclerDonationAttachments = ViewBindings.findChildViewById(rootView, id);
      if (recyclerDonationAttachments == null) {
        break missingId;
      }

      id = R.id.txtDonorLocation;
      TextView txtDonorLocation = ViewBindings.findChildViewById(rootView, id);
      if (txtDonorLocation == null) {
        break missingId;
      }

      id = R.id.txtHeaderText;
      TextView txtHeaderText = ViewBindings.findChildViewById(rootView, id);
      if (txtHeaderText == null) {
        break missingId;
      }

      return new ActivityDonationRequestBinding((RelativeLayout) rootView, btnSendRequest,
          btnUploadImages, edAcceptorName, edDonationDescription, edDonorContact, edDonorEmail,
          edDonorName, imgBack, layoutHeader, recyclerDonationAttachments, txtDonorLocation,
          txtHeaderText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
