// Generated by view binder compiler. Do not edit!
package com.wastemanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.wastemanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOrganizationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnRequest;

  @NonNull
  public final LinearLayout layoutDetail;

  @NonNull
  public final RelativeLayout layoutItemOrganization;

  @NonNull
  public final TextView txtOrganiationContact;

  @NonNull
  public final TextView txtOrganiationLocality;

  @NonNull
  public final TextView txtOrganiationName;

  private ItemOrganizationBinding(@NonNull RelativeLayout rootView, @NonNull Button btnRequest,
      @NonNull LinearLayout layoutDetail, @NonNull RelativeLayout layoutItemOrganization,
      @NonNull TextView txtOrganiationContact, @NonNull TextView txtOrganiationLocality,
      @NonNull TextView txtOrganiationName) {
    this.rootView = rootView;
    this.btnRequest = btnRequest;
    this.layoutDetail = layoutDetail;
    this.layoutItemOrganization = layoutItemOrganization;
    this.txtOrganiationContact = txtOrganiationContact;
    this.txtOrganiationLocality = txtOrganiationLocality;
    this.txtOrganiationName = txtOrganiationName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOrganizationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOrganizationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_organization, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOrganizationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRequest;
      Button btnRequest = ViewBindings.findChildViewById(rootView, id);
      if (btnRequest == null) {
        break missingId;
      }

      id = R.id.layoutDetail;
      LinearLayout layoutDetail = ViewBindings.findChildViewById(rootView, id);
      if (layoutDetail == null) {
        break missingId;
      }

      RelativeLayout layoutItemOrganization = (RelativeLayout) rootView;

      id = R.id.txtOrganiationContact;
      TextView txtOrganiationContact = ViewBindings.findChildViewById(rootView, id);
      if (txtOrganiationContact == null) {
        break missingId;
      }

      id = R.id.txtOrganiationLocality;
      TextView txtOrganiationLocality = ViewBindings.findChildViewById(rootView, id);
      if (txtOrganiationLocality == null) {
        break missingId;
      }

      id = R.id.txtOrganiationName;
      TextView txtOrganiationName = ViewBindings.findChildViewById(rootView, id);
      if (txtOrganiationName == null) {
        break missingId;
      }

      return new ItemOrganizationBinding((RelativeLayout) rootView, btnRequest, layoutDetail,
          layoutItemOrganization, txtOrganiationContact, txtOrganiationLocality,
          txtOrganiationName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
