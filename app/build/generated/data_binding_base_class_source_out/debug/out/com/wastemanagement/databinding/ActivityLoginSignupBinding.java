// Generated by view binder compiler. Do not edit!
package com.wastemanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.wastemanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginSignupBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatButton btnLogin;

  @NonNull
  public final AppCompatEditText edPassword;

  @NonNull
  public final AppCompatEditText edUsername;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final AppCompatTextView txtForgotPassword;

  @NonNull
  public final AppCompatTextView txtSignUp;

  private ActivityLoginSignupBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatButton btnLogin, @NonNull AppCompatEditText edPassword,
      @NonNull AppCompatEditText edUsername, @NonNull RelativeLayout rlMain,
      @NonNull AppCompatTextView txtForgotPassword, @NonNull AppCompatTextView txtSignUp) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.edPassword = edPassword;
    this.edUsername = edUsername;
    this.rlMain = rlMain;
    this.txtForgotPassword = txtForgotPassword;
    this.txtSignUp = txtSignUp;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginSignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginSignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginSignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      AppCompatButton btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.edPassword;
      AppCompatEditText edPassword = ViewBindings.findChildViewById(rootView, id);
      if (edPassword == null) {
        break missingId;
      }

      id = R.id.edUsername;
      AppCompatEditText edUsername = ViewBindings.findChildViewById(rootView, id);
      if (edUsername == null) {
        break missingId;
      }

      id = R.id.rlMain;
      RelativeLayout rlMain = ViewBindings.findChildViewById(rootView, id);
      if (rlMain == null) {
        break missingId;
      }

      id = R.id.txtForgotPassword;
      AppCompatTextView txtForgotPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtForgotPassword == null) {
        break missingId;
      }

      id = R.id.txtSignUp;
      AppCompatTextView txtSignUp = ViewBindings.findChildViewById(rootView, id);
      if (txtSignUp == null) {
        break missingId;
      }

      return new ActivityLoginSignupBinding((RelativeLayout) rootView, btnLogin, edPassword,
          edUsername, rlMain, txtForgotPassword, txtSignUp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
